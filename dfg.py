from telebot import *
import random
from apscheduler.schedulers.background import BackgroundScheduler
from apscheduler.triggers.cron import CronTrigger
import logging

# –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω Telegram API
TOKEN = "7054824514:AAH6f-3UUfs6mFvo5ilBN9VN3aVgDhgjhd4"
bot = telebot.TeleBot(TOKEN)

CHAT_ID = "-4286479911"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


def send_periodic_message():
    try:
        bot.send_message(CHAT_ID, "–≠—Ç–æ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 8 —É—Ç—Ä–∞.")
        logger.info("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
scheduler = BackgroundScheduler()
scheduler.start()

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
scheduler.add_job(
    send_periodic_message,
    CronTrigger(hour=9, minute=33),  # –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 8:00
    id='daily_message_job',
    name='–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 8 —É—Ç—Ä–∞',
    replace_existing=True
)

# –°–ø–∏—Å–æ–∫ –∏–∑ 12 –∑–Ω–∞—á–µ–Ω–∏–π
values = ['–õ–∏–Ω–∏—è AA', '–õ–∏–Ω–∏—è AB', '–õ–∏–Ω–∏—è AC', '–õ–∏–Ω–∏—è AD', '–õ–∏–Ω–∏—è AE', '–õ–∏–Ω–∏—è AF',
          '–õ–∏–Ω–∏—è AG', '–õ–∏–Ω–∏—è AH', '–õ–∏–Ω–∏—è BB', '–õ–∏–Ω–∏—è BC', '–õ–∏–Ω–∏—è BD', '–õ–∏–Ω–∏—è BE',
          '–õ–∏–Ω–∏—è BF', '–õ–∏–Ω–∏—è BG', '–õ–∏–Ω–∏—è BH']

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –º–µ–Ω—é
commands = [
    telebot.types.BotCommand("start", "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"),
    telebot.types.BotCommand("get_values", "–ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è"),
]

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –¥–ª—è –±–æ—Ç–∞
bot.set_my_commands(commands)

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    markup.add(btn1)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø VMS!", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /get_values
@bot.message_handler(commands=['get_values'])
def send_random_values(message):
    random_values = random.sample(values, 4)  # –í—ã–±–∏—Ä–∞–µ–º 4 —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏—è
    bot.reply_to(message, '\n'.join(random_values))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –±–æ—Ç–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    if bot.get_me().username in message.text:
        if 'üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è' in message.text:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)  # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
            btn1 = types.KeyboardButton('!')
            btn2 = types.KeyboardButton('!!')
            btn3 = types.KeyboardButton('!!!')
            markup.add(btn1, btn2, btn3)
            bot.reply_to(message, '–ù–∞–∂–º–∏ –Ω–∞ –ª—é–±—É—é –∫–Ω–æ–ø–∫—É', reply_markup=markup)  # –û—Ç–≤–µ—Ç –±–æ—Ç–∞

        elif any(keyword in message.text for keyword in ['!', '!!', '!!!']):
            random_values = random.sample(values, 4)
            bot.reply_to(message, '\n'.join(random_values))
    elif '—ã' in message.text:
        bot.reply_to(message, "—ã")
    else:
        bot.reply_to(message, "–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é –∫–æ–º–∞–Ω–¥—É.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
